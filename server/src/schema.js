"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
exports.__esModule = true;
var apollo_server_1 = require("apollo-server");
var schema = apollo_server_1.makeExecutableSchema({
    typeDefs: apollo_server_1.gql(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    type Agent {\n      user_id: ID!\n      username: String!\n      password: String!\n      real_estate_id: ID!\n    }\n    \n    type User {\n      user_id: ID!\n      phone_number: String!\n      mail: String!\n      surname: String!\n      ci: String!\n    }\n    \n    type Property {\n      property_id: ID!\n      address: String!\n      square_meters: String!\n      type: String!\n      description: String!\n    }\n\n    type RealEstate {\n      real_estate_id: ID!\n      name: String!\n      mail: String!\n      address: String!\n      phone_number: String!\n    }\n\n    type AgentLogin {\n      agent: Agent,\n      token: String\n    }\n\n    type Mutation {\n      addProperty(address: String!, square_meters: String!, type: String!, description: String!): Boolean\n      editProperty(property_id: ID!, address: String, square_meters: String, type: String, description: String): Boolean\n      deleteProperty(property_id: ID!): Boolean\n      login(username: String, password: String): AgentLogin!\n    }\n\n    type Query {\n      properties: [Property!]\n      property(property_id: ID!): Property\n      getPropertiesByRealEstate(real_estate_id: ID!): [Property!]\n      realEstates: [RealEstate!]\n      realEstate(real_estate_id: ID!): RealEstate\n      agents: [Agent!]\n      agent(agent_id: ID!): Agent\n    }\n  "], ["\n    type Agent {\n      user_id: ID!\n      username: String!\n      password: String!\n      real_estate_id: ID!\n    }\n    \n    type User {\n      user_id: ID!\n      phone_number: String!\n      mail: String!\n      surname: String!\n      ci: String!\n    }\n    \n    type Property {\n      property_id: ID!\n      address: String!\n      square_meters: String!\n      type: String!\n      description: String!\n    }\n\n    type RealEstate {\n      real_estate_id: ID!\n      name: String!\n      mail: String!\n      address: String!\n      phone_number: String!\n    }\n\n    type AgentLogin {\n      agent: Agent,\n      token: String\n    }\n\n    type Mutation {\n      addProperty(address: String!, square_meters: String!, type: String!, description: String!): Boolean\n      editProperty(property_id: ID!, address: String, square_meters: String, type: String, description: String): Boolean\n      deleteProperty(property_id: ID!): Boolean\n      login(username: String, password: String): AgentLogin!\n    }\n\n    type Query {\n      properties: [Property!]\n      property(property_id: ID!): Property\n      getPropertiesByRealEstate(real_estate_id: ID!): [Property!]\n      realEstates: [RealEstate!]\n      realEstate(real_estate_id: ID!): RealEstate\n      agents: [Agent!]\n      agent(agent_id: ID!): Agent\n    }\n  "])))
});
var schemas = [schema];
exports["default"] = schemas;
var templateObject_1;
